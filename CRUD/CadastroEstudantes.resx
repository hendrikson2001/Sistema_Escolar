<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABMFJREFUeF7t
        nU2LHFUYhQdE9If4D0J3R1djV6tEDAR0VIwGJH4hokuXbjRbCQgu3ChqVExUIiHGoMv8ASMqYoZ8EEKC
        Wdhd02JP+nrv+N6U1JzpmVv3nlud6ffAs0lP6lQ9Zz5qQqhe0mg0Go1Go9FoNBqNRqPRaEJi9t13z6jo
        PFv2eyeGRfeP0aB7c1R0za7CXpO7trLoHLfXetBds1x+uxkWvSfsCa5uOuHdz4XhoPe4aMgfs7Jy16jo
        HQUntlgMOu86F6IlX+yX4nvwhBaS3lHRkidl0T2AT2RhmZb9zn7Rw41ZXr7XFi7i9/ztuJDlB7P9ofs0
        KFcsw353RTTxYr/ffY7KFUu/+6lo4qUcdH+H5YrjV9HEi/0BPATFyn/8JZp4AaXK/xBNvKBSpUI08YJK
        lQrRxAsqVSpEEy+oVKkQTbyg0ljKAwMzemgvfO1OQzTxgkpjKJ981Nz66byZnDppRo88AD8mNWsvHtwA
        vRaLaOIFlTbFyzc3bm6QY4Txa4eNuXLVTC9dMWuvHIIfE4No4gWVNqEuP8cIXr7vYowgmnhBpaFsJd/D
        GKEu35N6BNHECyoNoVzZN1O+J+UIW8n3TC9eTjaCaOIFlYbwzwfvQwmIyTdfRd8dbSffk2oE0cQLKg1i
        0DOTYx9DCYiYrwR3pzNdvQSPW2d6+aoZv/o8PE4IookXVBpMhhF2+pnvmK5eNGsvPAOPE4po4gWVNoI4
        QlvyHaKJF1TaGMIIbcp3iCZeUGkUboTPPoGCELNGaFu+QzTxgkqjSTDCPMh3iCZeUGkSIkaYF/kO0cQL
        Kk1GgxHGb7w0N/IdookXVJqUwBHMtRv4z2vkkO8QTbyg0uSEjrANueQ7RBMvqJRCohFyyneIJl5QKY3I
        EXLLd4gmXlAplcFeMzn+BRQ8izbkO0QTL6iUjh1h/ez3UDTk2nWz9vJz+FhkRBMvqJRNyH2+Z3Lq2x3/
        21FKRBMvqJRJE/meNkYQTbygUhYx8j25RxBNvKBSBinke3KOIJp4QaWpSSnfk2sE0cQLKk1JiHx3q7n+
        3Wn4GiLHCKKJF1SailD5G/f5gb8nsEcQTbyg0hQ0ku///hyNIJp4QaWxRMn3zMkIookXVBpDEvmeORhB
        NPGCSpuSVL6n5RFEEy+otAkU+Z4WRxBNvKDSUKjyPS2NIJp4QaUhZJHvefh+Mzn5NTw2YnLiSztcDx9r
        h4gmXlBpCOs//gAvvk6q/6u546+E63+av995Cx8jANHECyoNoXxs2dw6dw5LEKI/8+tsN0Ii+Q7RxAsq
        DWXWCMnle7YaIaF8h2jiBZU2AY1Ak++pj5BYvkM08YJKm1Luf/D2CHT5Hj+Ck38krXyHaOIFlcbgRlg/
        eyaPfI+9Oxq/+Tp+LRLRxAsqVSpEEy+oVKkQTbygUqVCNPGCSpUK0cQLKlUqRBMvqFSpEE282JJRvVS5
        TZaH9v1WK1U8/d4vookXfXDrDHI8uFUfXbw1WR5dbPbsuduW6behzZzP9j4C+vj6TeR7fL3PqOgcASey
        kAwH3bdFS77oW5gIbb2FiY++ic8cxL1zhNwdfWT52TKWk9xNuGty1/bhsOg8NTdvY6XRaDQajUaj0Wg0
        Go1Go7lDsrT0LxrqVAWVeONAAAAAAElFTkSuQmCC
</value>
  </data>
</root>